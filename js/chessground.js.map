{"version":3,"file":"chessground.umd.js","sources":["../node_modules/@lichess-org/chessground/dist/types.js","../node_modules/@lichess-org/chessground/dist/util.js","../node_modules/@lichess-org/chessground/dist/premove.js","../node_modules/@lichess-org/chessground/dist/board.js","../node_modules/@lichess-org/chessground/dist/fen.js","../node_modules/@lichess-org/chessground/dist/config.js","../node_modules/@lichess-org/chessground/dist/anim.js","../node_modules/@lichess-org/chessground/dist/draw.js","../node_modules/@lichess-org/chessground/dist/drag.js","../node_modules/@lichess-org/chessground/dist/explosion.js","../node_modules/@lichess-org/chessground/dist/api.js","../node_modules/@lichess-org/chessground/dist/svg.js","../node_modules/@lichess-org/chessground/dist/wrap.js","../node_modules/@lichess-org/chessground/dist/events.js","../node_modules/@lichess-org/chessground/dist/drop.js","../node_modules/@lichess-org/chessground/dist/render.js","../node_modules/@lichess-org/chessground/dist/autoPieces.js","../node_modules/@lichess-org/chessground/dist/sync.js","../node_modules/@lichess-org/chessground/dist/chessground.js","../node_modules/@lichess-org/chessground/dist/state.js"],"sourcesContent":["export const colors = ['white', 'black'];\nexport const roles = ['pawn', 'knight', 'bishop', 'rook', 'queen', 'king'];\nexport const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\nexport const ranks = ['1', '2', '3', '4', '5', '6', '7', '8'];\n//# sourceMappingURL=types.js.map","import * as cg from './types.js';\nexport const invRanks = [...cg.ranks].reverse();\nexport const allKeys = cg.files.flatMap(f => cg.ranks.map(r => (f + r)));\nexport const pos2key = (pos) => allKeys[8 * pos[0] + pos[1]];\nexport const key2pos = (k) => [k.charCodeAt(0) - 97, k.charCodeAt(1) - 49];\nexport const uciToMove = (uci) => {\n    if (!uci)\n        return undefined;\n    if (uci[1] === '@')\n        return [uci.slice(2, 4)];\n    return [uci.slice(0, 2), uci.slice(2, 4)];\n};\nexport const allPos = allKeys.map(key2pos);\nexport function memo(f) {\n    let v;\n    const ret = () => {\n        if (v === undefined)\n            v = f();\n        return v;\n    };\n    ret.clear = () => {\n        v = undefined;\n    };\n    return ret;\n}\nexport const timer = () => {\n    let startAt;\n    return {\n        start() {\n            startAt = performance.now();\n        },\n        cancel() {\n            startAt = undefined;\n        },\n        stop() {\n            if (!startAt)\n                return 0;\n            const time = performance.now() - startAt;\n            startAt = undefined;\n            return time;\n        },\n    };\n};\nexport const opposite = (c) => (c === 'white' ? 'black' : 'white');\nexport const distanceSq = (pos1, pos2) => (pos1[0] - pos2[0]) ** 2 + (pos1[1] - pos2[1]) ** 2;\nexport const samePiece = (p1, p2) => p1.role === p2.role && p1.color === p2.color;\nexport const samePos = (p1, p2) => p1[0] === p2[0] && p1[1] === p2[1];\nexport const posToTranslate = (bounds) => (pos, asWhite) => [\n    ((asWhite ? pos[0] : 7 - pos[0]) * bounds.width) / 8,\n    ((asWhite ? 7 - pos[1] : pos[1]) * bounds.height) / 8,\n];\nexport const translate = (el, pos) => {\n    el.style.transform = `translate(${pos[0]}px,${pos[1]}px)`;\n};\nexport const translateAndScale = (el, pos, scale = 1) => {\n    el.style.transform = `translate(${pos[0]}px,${pos[1]}px) scale(${scale})`;\n};\nexport const setVisible = (el, v) => {\n    el.style.visibility = v ? 'visible' : 'hidden';\n};\nexport const eventPosition = (e) => {\n    if (e.clientX || e.clientX === 0)\n        return [e.clientX, e.clientY];\n    if (e.targetTouches?.[0])\n        return [e.targetTouches[0].clientX, e.targetTouches[0].clientY];\n    return; // touchend has no position!\n};\nexport const isRightButton = (e) => e.button === 2;\nexport const createEl = (tagName, className) => {\n    const el = document.createElement(tagName);\n    if (className)\n        el.className = className;\n    return el;\n};\nexport function computeSquareCenter(key, asWhite, bounds) {\n    const pos = key2pos(key);\n    if (!asWhite) {\n        pos[0] = 7 - pos[0];\n        pos[1] = 7 - pos[1];\n    }\n    return [\n        bounds.left + (bounds.width * pos[0]) / 8 + bounds.width / 16,\n        bounds.top + (bounds.height * (7 - pos[1])) / 8 + bounds.height / 16,\n    ];\n}\nexport const diff = (a, b) => Math.abs(a - b);\nexport const knightDir = (x1, y1, x2, y2) => diff(x1, x2) * diff(y1, y2) === 2;\nexport const rookDir = (x1, y1, x2, y2) => (x1 === x2) !== (y1 === y2);\nexport const bishopDir = (x1, y1, x2, y2) => diff(x1, x2) === diff(y1, y2) && x1 !== x2;\nexport const queenDir = (x1, y1, x2, y2) => rookDir(x1, y1, x2, y2) || bishopDir(x1, y1, x2, y2);\nexport const kingDirNonCastling = (x1, y1, x2, y2) => Math.max(diff(x1, x2), diff(y1, y2)) === 1;\nexport const pawnDirCapture = (x1, y1, x2, y2, isDirectionUp) => diff(x1, x2) === 1 && y2 === y1 + (isDirectionUp ? 1 : -1);\nexport const pawnDirAdvance = (x1, y1, x2, y2, isDirectionUp) => {\n    const step = isDirectionUp ? 1 : -1;\n    return (x1 === x2 &&\n        (y2 === y1 + step ||\n            // allow 2 squares from first two ranks, for horde\n            (y2 === y1 + 2 * step && (isDirectionUp ? y1 <= 1 : y1 >= 6))));\n};\n/** Returns all board squares between (x1, y1) and (x2, y2) exclusive,\n *  along a straight line (rook or bishop path). Returns [] if not aligned, or none between.\n */\nexport const squaresBetween = (x1, y1, x2, y2) => {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    // Must be a straight or diagonal line\n    if (dx && dy && Math.abs(dx) !== Math.abs(dy))\n        return [];\n    const stepX = Math.sign(dx), stepY = Math.sign(dy);\n    const squares = [];\n    let x = x1 + stepX, y = y1 + stepY;\n    while (x !== x2 || y !== y2) {\n        squares.push([x, y]);\n        x += stepX;\n        y += stepY;\n    }\n    return squares.map(sq => pos2key(sq));\n};\nexport const adjacentSquares = (square) => {\n    const pos = key2pos(square);\n    const adjacentSquares = [];\n    if (pos[0] > 0)\n        adjacentSquares.push([pos[0] - 1, pos[1]]);\n    if (pos[0] < 7)\n        adjacentSquares.push([pos[0] + 1, pos[1]]);\n    return adjacentSquares.map(pos2key);\n};\nexport const squareShiftedVertically = (square, delta) => {\n    const pos = key2pos(square);\n    pos[1] += delta;\n    return pos2key(pos);\n};\n//# sourceMappingURL=util.js.map","import * as util from './util.js';\nconst isDestOccupiedByFriendly = (ctx) => ctx.friendlies.has(util.pos2key(ctx.pos2));\nconst isDestOccupiedByEnemy = (ctx) => ctx.enemies.has(util.pos2key(ctx.pos2));\nconst anyPieceBetween = (pos1, pos2, pieces) => util.squaresBetween(...pos1, ...pos2).some(s => pieces.has(s));\nconst canEnemyPawnAdvanceToSquare = (pawnStart, dest, ctx) => {\n    const piece = ctx.enemies.get(pawnStart);\n    if (piece?.role !== 'pawn')\n        return false;\n    const step = piece.color === 'white' ? 1 : -1;\n    const startPos = util.key2pos(pawnStart);\n    const destPos = util.key2pos(dest);\n    return (util.pawnDirAdvance(...startPos, ...destPos, piece.color === 'white') &&\n        !anyPieceBetween(startPos, [destPos[0], destPos[1] + step], ctx.allPieces));\n};\nconst canEnemyPawnCaptureOnSquare = (pawnStart, dest, ctx) => {\n    const enemyPawn = ctx.enemies.get(pawnStart);\n    return (enemyPawn?.role === 'pawn' &&\n        util.pawnDirCapture(...util.key2pos(pawnStart), ...util.key2pos(dest), enemyPawn.color === 'white') &&\n        (ctx.friendlies.has(dest) ||\n            canBeCapturedBySomeEnemyEnPassant(util.squareShiftedVertically(dest, enemyPawn.color === 'white' ? -1 : 1), ctx.friendlies, ctx.enemies, ctx.lastMove)));\n};\nconst canSomeEnemyPawnAdvanceToDest = (ctx) => [...ctx.enemies.keys()].some(key => canEnemyPawnAdvanceToSquare(key, util.pos2key(ctx.pos2), ctx));\nconst isDestControlledByEnemy = (ctx, pieceRolesExclude) => {\n    const square = ctx.pos2;\n    return [...ctx.enemies].some(([key, piece]) => {\n        const piecePos = util.key2pos(key);\n        return (!pieceRolesExclude?.includes(piece.role) &&\n            ((piece.role === 'pawn' && util.pawnDirCapture(...piecePos, ...square, piece.color === 'white')) ||\n                (piece.role === 'knight' && util.knightDir(...piecePos, ...square)) ||\n                (piece.role === 'bishop' && util.bishopDir(...piecePos, ...square)) ||\n                (piece.role === 'rook' && util.rookDir(...piecePos, ...square)) ||\n                (piece.role === 'queen' && util.queenDir(...piecePos, ...square)) ||\n                (piece.role === 'king' && util.kingDirNonCastling(...piecePos, ...square))) &&\n            (!['bishop', 'rook', 'queen'].includes(piece.role) || !anyPieceBetween(piecePos, square, ctx.allPieces)));\n    });\n};\nconst isFriendlyOnDestAndAttacked = (ctx) => isDestOccupiedByFriendly(ctx) &&\n    (canBeCapturedBySomeEnemyEnPassant(util.pos2key(ctx.pos2), ctx.friendlies, ctx.enemies, ctx.lastMove) ||\n        isDestControlledByEnemy(ctx));\nconst canBeCapturedBySomeEnemyEnPassant = (potentialSquareOfFriendlyPawn, friendlies, enemies, lastMove) => {\n    if (lastMove && potentialSquareOfFriendlyPawn !== lastMove[1])\n        return false;\n    const pos = util.key2pos(potentialSquareOfFriendlyPawn);\n    const friendly = friendlies.get(potentialSquareOfFriendlyPawn);\n    return (friendly?.role === 'pawn' &&\n        pos[1] === (friendly.color === 'white' ? 3 : 4) &&\n        (!lastMove || util.diff(util.key2pos(lastMove[0])[1], pos[1]) === 2) &&\n        [1, -1].some(delta => enemies.get(util.pos2key([pos[0] + delta, pos[1]]))?.role === 'pawn'));\n};\nconst isPathClearEnoughOfFriendliesForPremove = (ctx) => {\n    if (ctx.unrestrictedPremoves)\n        return true;\n    const squaresBetween = util.squaresBetween(...ctx.pos1, ...ctx.pos2);\n    const squaresOfFriendliesBetween = squaresBetween.filter(s => ctx.friendlies.has(s));\n    return (!squaresOfFriendliesBetween.length ||\n        (squaresOfFriendliesBetween.length === 1 &&\n            canBeCapturedBySomeEnemyEnPassant(squaresOfFriendliesBetween[0], ctx.friendlies, ctx.enemies, ctx.lastMove) &&\n            !squaresBetween.includes(util.squareShiftedVertically(squaresOfFriendliesBetween[0], ctx.color === 'white' ? -1 : 1))));\n};\nconst isPathClearEnoughOfEnemiesForPremove = (ctx) => {\n    if (ctx.unrestrictedPremoves)\n        return true;\n    const squaresBetween = util.squaresBetween(...ctx.pos1, ...ctx.pos2);\n    const squaresOfEnemiesBetween = squaresBetween.filter(s => ctx.enemies.has(s));\n    if (squaresOfEnemiesBetween.length > 1)\n        return false;\n    if (!squaresOfEnemiesBetween.length)\n        return true;\n    const enemySquare = squaresOfEnemiesBetween[0];\n    const enemy = ctx.enemies.get(enemySquare);\n    if (!enemy || enemy.role !== 'pawn')\n        return true;\n    const enemyStep = enemy.color === 'white' ? 1 : -1;\n    const squareAbove = util.squareShiftedVertically(enemySquare, enemyStep);\n    const enemyPawnDests = [\n        ...util.adjacentSquares(squareAbove).filter(s => canEnemyPawnCaptureOnSquare(enemySquare, s, ctx)),\n        ...[squareAbove, util.squareShiftedVertically(squareAbove, enemyStep)].filter(s => s && canEnemyPawnAdvanceToSquare(enemySquare, s, ctx)),\n    ];\n    const badSquares = [...squaresBetween, util.pos2key(ctx.pos1)];\n    return enemyPawnDests.some(square => !badSquares.includes(square));\n};\nconst isPathClearEnoughForPremove = (ctx) => isPathClearEnoughOfFriendliesForPremove(ctx) && isPathClearEnoughOfEnemiesForPremove(ctx);\nconst pawn = (ctx) => {\n    const step = ctx.color === 'white' ? 1 : -1;\n    if (util.diff(ctx.pos1[0], ctx.pos2[0]) > 1)\n        return false;\n    if (!util.diff(ctx.pos1[0], ctx.pos2[0])) {\n        return (util.pawnDirAdvance(...ctx.pos1, ...ctx.pos2, ctx.color === 'white') &&\n            isPathClearEnoughForPremove({ ...ctx, pos2: [ctx.pos2[0], ctx.pos2[1] + step] }));\n    }\n    if (ctx.pos2[1] !== ctx.pos1[1] + step)\n        return false;\n    if (ctx.unrestrictedPremoves || isDestOccupiedByEnemy(ctx))\n        return true;\n    if (isDestOccupiedByFriendly(ctx))\n        return isDestControlledByEnemy(ctx);\n    else\n        return (canSomeEnemyPawnAdvanceToDest(ctx) ||\n            canBeCapturedBySomeEnemyEnPassant(util.pos2key([ctx.pos2[0], ctx.pos2[1] + step]), ctx.friendlies, ctx.enemies, ctx.lastMove) ||\n            isDestControlledByEnemy(ctx, ['pawn']));\n};\nconst knight = (ctx) => util.knightDir(...ctx.pos1, ...ctx.pos2) &&\n    (ctx.unrestrictedPremoves || !isDestOccupiedByFriendly(ctx) || isFriendlyOnDestAndAttacked(ctx));\nconst bishop = (ctx) => util.bishopDir(...ctx.pos1, ...ctx.pos2) &&\n    isPathClearEnoughForPremove(ctx) &&\n    (ctx.unrestrictedPremoves || !isDestOccupiedByFriendly(ctx) || isFriendlyOnDestAndAttacked(ctx));\nconst rook = (ctx) => util.rookDir(...ctx.pos1, ...ctx.pos2) &&\n    isPathClearEnoughForPremove(ctx) &&\n    (ctx.unrestrictedPremoves || !isDestOccupiedByFriendly(ctx) || isFriendlyOnDestAndAttacked(ctx));\nconst queen = (ctx) => bishop(ctx) || rook(ctx);\nconst king = (ctx) => (util.kingDirNonCastling(...ctx.pos1, ...ctx.pos2) &&\n    (ctx.unrestrictedPremoves || !isDestOccupiedByFriendly(ctx) || isFriendlyOnDestAndAttacked(ctx))) ||\n    (ctx.canCastle &&\n        ctx.pos1[1] === ctx.pos2[1] &&\n        ctx.pos1[1] === (ctx.color === 'white' ? 0 : 7) &&\n        ((ctx.pos1[0] === 4 &&\n            ((ctx.pos2[0] === 2 && ctx.rookFilesFriendlies.includes(0)) ||\n                (ctx.pos2[0] === 6 && ctx.rookFilesFriendlies.includes(7)))) ||\n            ctx.rookFilesFriendlies.includes(ctx.pos2[0])) &&\n        (ctx.unrestrictedPremoves ||\n            /* The following checks if no non-rook friendly piece is in the way between the king and its castling destination.\n               Note that for the Chess960 edge case of Kb1 \"long castling\", the check passes even if there is a piece in the way\n               on c1. But this is fine, since premoving from b1 to a1 as a normal move would have already returned true. */\n            util\n                .squaresBetween(...ctx.pos1, ctx.pos2[0] > ctx.pos1[0] ? 7 : 1, ctx.pos2[1])\n                .map(s => ctx.allPieces.get(s))\n                .every(p => !p || util.samePiece(p, { role: 'rook', color: ctx.color }))));\nconst mobilityByRole = { pawn, knight, bishop, rook, queen, king };\nexport function premove(state, key) {\n    const pieces = state.pieces, canCastle = state.premovable.castle, unrestrictedPremoves = !!state.premovable.unrestrictedPremoves;\n    const piece = pieces.get(key);\n    if (!piece || piece.color === state.turnColor)\n        return [];\n    const color = piece.color, friendlies = new Map([...pieces].filter(([_, p]) => p.color === color)), enemies = new Map([...pieces].filter(([_, p]) => p.color === util.opposite(color))), pos = util.key2pos(key), mobility = mobilityByRole[piece.role], ctx = {\n        pos1: pos,\n        allPieces: pieces,\n        friendlies: friendlies,\n        enemies: enemies,\n        unrestrictedPremoves: unrestrictedPremoves,\n        color: color,\n        canCastle: canCastle,\n        rookFilesFriendlies: Array.from(pieces)\n            .filter(([k, p]) => k[1] === (color === 'white' ? '1' : '8') && p.color === color && p.role === 'rook')\n            .map(([k]) => util.key2pos(k)[0]),\n        lastMove: state.lastMove,\n    };\n    return util.allPos.filter(pos2 => mobility({ ...ctx, pos2 })).map(util.pos2key);\n}\n//# sourceMappingURL=premove.js.map","import { pos2key, key2pos, opposite, distanceSq, allPos, computeSquareCenter, queenDir, knightDir, samePos, } from './util.js';\nimport { premove } from './premove.js';\nexport function callUserFunction(f, ...args) {\n    if (f)\n        setTimeout(() => f(...args), 1);\n}\nexport function toggleOrientation(state) {\n    state.orientation = opposite(state.orientation);\n    state.animation.current = state.draggable.current = state.selected = undefined;\n}\nexport function reset(state) {\n    state.lastMove = undefined;\n    unselect(state);\n    unsetPremove(state);\n    unsetPredrop(state);\n}\nexport function setPieces(state, pieces) {\n    for (const [key, piece] of pieces) {\n        if (piece)\n            state.pieces.set(key, piece);\n        else\n            state.pieces.delete(key);\n    }\n}\nexport function setCheck(state, color) {\n    state.check = undefined;\n    if (color === true)\n        color = state.turnColor;\n    if (color)\n        for (const [k, p] of state.pieces) {\n            if (p.role === 'king' && p.color === color) {\n                state.check = k;\n            }\n        }\n}\nfunction setPremove(state, orig, dest, meta) {\n    unsetPredrop(state);\n    state.premovable.current = [orig, dest];\n    callUserFunction(state.premovable.events.set, orig, dest, meta);\n}\nexport function unsetPremove(state) {\n    if (state.premovable.current) {\n        state.premovable.current = undefined;\n        callUserFunction(state.premovable.events.unset);\n    }\n}\nfunction setPredrop(state, role, key) {\n    unsetPremove(state);\n    state.predroppable.current = { role, key };\n    callUserFunction(state.predroppable.events.set, role, key);\n}\nexport function unsetPredrop(state) {\n    const pd = state.predroppable;\n    if (pd.current) {\n        pd.current = undefined;\n        callUserFunction(pd.events.unset);\n    }\n}\nfunction tryAutoCastle(state, orig, dest) {\n    if (!state.autoCastle)\n        return false;\n    const king = state.pieces.get(orig);\n    if (!king || king.role !== 'king')\n        return false;\n    const origPos = key2pos(orig);\n    const destPos = key2pos(dest);\n    if ((origPos[1] !== 0 && origPos[1] !== 7) || origPos[1] !== destPos[1])\n        return false;\n    if (origPos[0] === 4 && !state.pieces.has(dest)) {\n        if (destPos[0] === 6)\n            dest = pos2key([7, destPos[1]]);\n        else if (destPos[0] === 2)\n            dest = pos2key([0, destPos[1]]);\n    }\n    const rook = state.pieces.get(dest);\n    if (!rook || rook.color !== king.color || rook.role !== 'rook')\n        return false;\n    state.pieces.delete(orig);\n    state.pieces.delete(dest);\n    if (origPos[0] < destPos[0]) {\n        state.pieces.set(pos2key([6, destPos[1]]), king);\n        state.pieces.set(pos2key([5, destPos[1]]), rook);\n    }\n    else {\n        state.pieces.set(pos2key([2, destPos[1]]), king);\n        state.pieces.set(pos2key([3, destPos[1]]), rook);\n    }\n    return true;\n}\nexport function baseMove(state, orig, dest) {\n    const origPiece = state.pieces.get(orig), destPiece = state.pieces.get(dest);\n    if (orig === dest || !origPiece)\n        return false;\n    const captured = destPiece && destPiece.color !== origPiece.color ? destPiece : undefined;\n    if (dest === state.selected)\n        unselect(state);\n    callUserFunction(state.events.move, orig, dest, captured);\n    if (!tryAutoCastle(state, orig, dest)) {\n        state.pieces.set(dest, origPiece);\n        state.pieces.delete(orig);\n    }\n    state.lastMove = [orig, dest];\n    state.check = undefined;\n    callUserFunction(state.events.change);\n    return captured || true;\n}\nexport function baseNewPiece(state, piece, key, force) {\n    if (state.pieces.has(key)) {\n        if (force)\n            state.pieces.delete(key);\n        else\n            return false;\n    }\n    callUserFunction(state.events.dropNewPiece, piece, key);\n    state.pieces.set(key, piece);\n    state.lastMove = [key];\n    state.check = undefined;\n    callUserFunction(state.events.change);\n    state.movable.dests = undefined;\n    state.turnColor = opposite(state.turnColor);\n    return true;\n}\nfunction baseUserMove(state, orig, dest) {\n    const result = baseMove(state, orig, dest);\n    if (result) {\n        state.movable.dests = undefined;\n        state.turnColor = opposite(state.turnColor);\n        state.animation.current = undefined;\n    }\n    return result;\n}\nexport function userMove(state, orig, dest) {\n    if (canMove(state, orig, dest)) {\n        const result = baseUserMove(state, orig, dest);\n        if (result) {\n            const holdTime = state.hold.stop();\n            unselect(state);\n            const metadata = {\n                premove: false,\n                ctrlKey: state.stats.ctrlKey,\n                holdTime,\n            };\n            if (result !== true)\n                metadata.captured = result;\n            callUserFunction(state.movable.events.after, orig, dest, metadata);\n            return true;\n        }\n    }\n    else if (canPremove(state, orig, dest)) {\n        setPremove(state, orig, dest, {\n            ctrlKey: state.stats.ctrlKey,\n        });\n        unselect(state);\n        return true;\n    }\n    unselect(state);\n    return false;\n}\nexport function dropNewPiece(state, orig, dest, force) {\n    const piece = state.pieces.get(orig);\n    if (piece && (canDrop(state, orig, dest) || force)) {\n        state.pieces.delete(orig);\n        baseNewPiece(state, piece, dest, force);\n        callUserFunction(state.movable.events.afterNewPiece, piece.role, dest, {\n            premove: false,\n            predrop: false,\n        });\n    }\n    else if (piece && canPredrop(state, orig, dest)) {\n        setPredrop(state, piece.role, dest);\n    }\n    else {\n        unsetPremove(state);\n        unsetPredrop(state);\n    }\n    state.pieces.delete(orig);\n    unselect(state);\n}\nexport function selectSquare(state, key, force) {\n    callUserFunction(state.events.select, key);\n    if (state.selected) {\n        if (state.selected === key && !state.draggable.enabled) {\n            unselect(state);\n            state.hold.cancel();\n            return;\n        }\n        else if ((state.selectable.enabled || force) && state.selected !== key) {\n            if (userMove(state, state.selected, key)) {\n                state.stats.dragged = false;\n                return;\n            }\n        }\n    }\n    if ((state.selectable.enabled || state.draggable.enabled) &&\n        (isMovable(state, key) || isPremovable(state, key))) {\n        setSelected(state, key);\n        state.hold.start();\n    }\n}\nexport function setSelected(state, key) {\n    state.selected = key;\n    if (!isPremovable(state, key))\n        state.premovable.dests = undefined;\n    else if (!state.premovable.customDests)\n        state.premovable.dests = premove(state, key);\n    // calculate chess premoves if custom premoves are not passed\n}\nexport function unselect(state) {\n    state.selected = undefined;\n    state.premovable.dests = undefined;\n    state.hold.cancel();\n}\nfunction isMovable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        (state.movable.color === 'both' ||\n            (state.movable.color === piece.color && state.turnColor === piece.color)));\n}\nexport const canMove = (state, orig, dest) => orig !== dest &&\n    isMovable(state, orig) &&\n    (state.movable.free || !!state.movable.dests?.get(orig)?.includes(dest));\nfunction canDrop(state, orig, dest) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        (orig === dest || !state.pieces.has(dest)) &&\n        (state.movable.color === 'both' ||\n            (state.movable.color === piece.color && state.turnColor === piece.color)));\n}\nfunction isPremovable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        state.premovable.enabled &&\n        state.movable.color === piece.color &&\n        state.turnColor !== piece.color);\n}\nconst canPremove = (state, orig, dest) => orig !== dest &&\n    isPremovable(state, orig) &&\n    (state.premovable.customDests?.get(orig) ?? premove(state, orig)).includes(dest);\nfunction canPredrop(state, orig, dest) {\n    const piece = state.pieces.get(orig);\n    const destPiece = state.pieces.get(dest);\n    return (!!piece &&\n        (!destPiece || destPiece.color !== state.movable.color) &&\n        state.predroppable.enabled &&\n        (piece.role !== 'pawn' || (dest[1] !== '1' && dest[1] !== '8')) &&\n        state.movable.color === piece.color &&\n        state.turnColor !== piece.color);\n}\nexport function isDraggable(state, orig) {\n    const piece = state.pieces.get(orig);\n    return (!!piece &&\n        state.draggable.enabled &&\n        (state.movable.color === 'both' ||\n            (state.movable.color === piece.color && (state.turnColor === piece.color || state.premovable.enabled))));\n}\nexport function playPremove(state) {\n    const move = state.premovable.current;\n    if (!move)\n        return false;\n    const orig = move[0], dest = move[1];\n    let success = false;\n    if (canMove(state, orig, dest)) {\n        const result = baseUserMove(state, orig, dest);\n        if (result) {\n            const metadata = { premove: true };\n            if (result !== true)\n                metadata.captured = result;\n            callUserFunction(state.movable.events.after, orig, dest, metadata);\n            success = true;\n        }\n    }\n    unsetPremove(state);\n    return success;\n}\nexport function playPredrop(state, validate) {\n    const drop = state.predroppable.current;\n    let success = false;\n    if (!drop)\n        return false;\n    if (validate(drop)) {\n        const piece = {\n            role: drop.role,\n            color: state.movable.color,\n        };\n        if (baseNewPiece(state, piece, drop.key)) {\n            callUserFunction(state.movable.events.afterNewPiece, drop.role, drop.key, {\n                premove: false,\n                predrop: true,\n            });\n            success = true;\n        }\n    }\n    unsetPredrop(state);\n    return success;\n}\nexport function cancelMove(state) {\n    unsetPremove(state);\n    unsetPredrop(state);\n    unselect(state);\n}\nexport function stop(state) {\n    state.movable.color = state.movable.dests = state.animation.current = undefined;\n    cancelMove(state);\n}\nexport function getKeyAtDomPos(pos, asWhite, bounds) {\n    let file = Math.floor((8 * (pos[0] - bounds.left)) / bounds.width);\n    if (!asWhite)\n        file = 7 - file;\n    let rank = 7 - Math.floor((8 * (pos[1] - bounds.top)) / bounds.height);\n    if (!asWhite)\n        rank = 7 - rank;\n    return file >= 0 && file < 8 && rank >= 0 && rank < 8 ? pos2key([file, rank]) : undefined;\n}\nexport function getSnappedKeyAtDomPos(orig, pos, asWhite, bounds) {\n    const origPos = key2pos(orig);\n    const validSnapPos = allPos.filter(pos2 => samePos(origPos, pos2) ||\n        queenDir(origPos[0], origPos[1], pos2[0], pos2[1]) ||\n        knightDir(origPos[0], origPos[1], pos2[0], pos2[1]));\n    const validSnapCenters = validSnapPos.map(pos2 => computeSquareCenter(pos2key(pos2), asWhite, bounds));\n    const validSnapDistances = validSnapCenters.map(pos2 => distanceSq(pos, pos2));\n    const [, closestSnapIndex] = validSnapDistances.reduce((a, b, index) => (a[0] < b ? a : [b, index]), [validSnapDistances[0], 0]);\n    return pos2key(validSnapPos[closestSnapIndex]);\n}\nexport const whitePov = (s) => s.orientation === 'white';\n//# sourceMappingURL=board.js.map","import { pos2key, invRanks } from './util.js';\nimport * as cg from './types.js';\nexport const initial = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR';\nconst roles = {\n    p: 'pawn',\n    r: 'rook',\n    n: 'knight',\n    b: 'bishop',\n    q: 'queen',\n    k: 'king',\n};\nconst letters = {\n    pawn: 'p',\n    rook: 'r',\n    knight: 'n',\n    bishop: 'b',\n    queen: 'q',\n    king: 'k',\n};\nexport function read(fen) {\n    if (fen === 'start')\n        fen = initial;\n    const pieces = new Map();\n    let row = 7, col = 0;\n    for (const c of fen) {\n        switch (c) {\n            case ' ':\n            case '[':\n                return pieces;\n            case '/':\n                --row;\n                if (row < 0)\n                    return pieces;\n                col = 0;\n                break;\n            case '~': {\n                const piece = pieces.get(pos2key([col - 1, row]));\n                if (piece)\n                    piece.promoted = true;\n                break;\n            }\n            default: {\n                const nb = c.charCodeAt(0);\n                if (nb < 57)\n                    col += nb - 48;\n                else {\n                    const role = c.toLowerCase();\n                    const key = pos2key([col, row]);\n                    if (key)\n                        pieces.set(key, {\n                            role: roles[role],\n                            color: c === role ? 'black' : 'white',\n                        });\n                    ++col;\n                }\n            }\n        }\n    }\n    return pieces;\n}\nexport function write(pieces) {\n    return invRanks\n        .map(y => cg.files\n        .map(x => {\n        const piece = pieces.get((x + y));\n        if (piece) {\n            let p = letters[piece.role];\n            if (piece.color === 'white')\n                p = p.toUpperCase();\n            if (piece.promoted)\n                p += '~';\n            return p;\n        }\n        else\n            return '1';\n    })\n        .join(''))\n        .join('/')\n        .replace(/1{2,}/g, s => s.length.toString());\n}\n//# sourceMappingURL=fen.js.map","import { setCheck, setSelected } from './board.js';\nimport { read as fenRead } from './fen.js';\nexport function applyAnimation(state, config) {\n    if (config.animation) {\n        deepMerge(state.animation, config.animation);\n        // no need for such short animations\n        if ((state.animation.duration || 0) < 70)\n            state.animation.enabled = false;\n    }\n}\nexport function configure(state, config) {\n    // don't merge destinations and autoShapes. Just override.\n    if (config.movable?.dests)\n        state.movable.dests = undefined;\n    if (config.drawable?.autoShapes)\n        state.drawable.autoShapes = [];\n    deepMerge(state, config);\n    // if a fen was provided, replace the pieces\n    if (config.fen) {\n        state.pieces = fenRead(config.fen);\n        state.drawable.shapes = config.drawable?.shapes || [];\n    }\n    // apply config values that could be undefined yet meaningful\n    if ('check' in config)\n        setCheck(state, config.check || false);\n    if ('lastMove' in config && !config.lastMove)\n        state.lastMove = undefined;\n    // in case of ZH drop last move, there's a single square.\n    // if the previous last move had two squares,\n    // the merge algorithm will incorrectly keep the second square.\n    else if (config.lastMove)\n        state.lastMove = config.lastMove;\n    // fix move/premove dests\n    if (state.selected)\n        setSelected(state, state.selected);\n    applyAnimation(state, config);\n    if (!state.movable.rookCastle && state.movable.dests) {\n        const rank = state.movable.color === 'white' ? '1' : '8', kingStartPos = ('e' + rank), dests = state.movable.dests.get(kingStartPos), king = state.pieces.get(kingStartPos);\n        if (!dests || !king || king.role !== 'king')\n            return;\n        state.movable.dests.set(kingStartPos, dests.filter(d => !(d === 'a' + rank && dests.includes(('c' + rank))) &&\n            !(d === 'h' + rank && dests.includes(('g' + rank)))));\n    }\n}\nfunction deepMerge(base, extend) {\n    for (const key in extend) {\n        if (key === '__proto__' || key === 'constructor' || !Object.prototype.hasOwnProperty.call(extend, key))\n            continue;\n        if (Object.prototype.hasOwnProperty.call(base, key) &&\n            isPlainObject(base[key]) &&\n            isPlainObject(extend[key]))\n            deepMerge(base[key], extend[key]);\n        else\n            base[key] = extend[key];\n    }\n}\nfunction isPlainObject(o) {\n    if (typeof o !== 'object' || o === null)\n        return false;\n    const proto = Object.getPrototypeOf(o);\n    return proto === Object.prototype || proto === null;\n}\n//# sourceMappingURL=config.js.map","import * as util from './util.js';\nexport const anim = (mutation, state) => state.animation.enabled ? animate(mutation, state) : render(mutation, state);\nexport function render(mutation, state) {\n    const result = mutation(state);\n    state.dom.redraw();\n    return result;\n}\nconst makePiece = (key, piece) => ({\n    key: key,\n    pos: util.key2pos(key),\n    piece: piece,\n});\nconst closer = (piece, pieces) => pieces.sort((p1, p2) => util.distanceSq(piece.pos, p1.pos) - util.distanceSq(piece.pos, p2.pos))[0];\nfunction computePlan(prevPieces, current) {\n    const anims = new Map(), animedOrigs = [], fadings = new Map(), missings = [], news = [], prePieces = new Map();\n    let curP, preP, vector;\n    for (const [k, p] of prevPieces) {\n        prePieces.set(k, makePiece(k, p));\n    }\n    for (const key of util.allKeys) {\n        curP = current.pieces.get(key);\n        preP = prePieces.get(key);\n        if (curP) {\n            if (preP) {\n                if (!util.samePiece(curP, preP.piece)) {\n                    missings.push(preP);\n                    news.push(makePiece(key, curP));\n                }\n            }\n            else\n                news.push(makePiece(key, curP));\n        }\n        else if (preP)\n            missings.push(preP);\n    }\n    for (const newP of news) {\n        preP = closer(newP, missings.filter(p => util.samePiece(newP.piece, p.piece)));\n        if (preP) {\n            vector = [preP.pos[0] - newP.pos[0], preP.pos[1] - newP.pos[1]];\n            anims.set(newP.key, vector.concat(vector));\n            animedOrigs.push(preP.key);\n        }\n    }\n    for (const p of missings) {\n        if (!animedOrigs.includes(p.key))\n            fadings.set(p.key, p.piece);\n    }\n    return {\n        anims: anims,\n        fadings: fadings,\n    };\n}\nfunction step(state, now) {\n    const cur = state.animation.current;\n    if (cur === undefined) {\n        // animation was canceled :(\n        if (!state.dom.destroyed)\n            state.dom.redrawNow();\n        return;\n    }\n    const rest = 1 - (now - cur.start) * cur.frequency;\n    if (rest <= 0) {\n        state.animation.current = undefined;\n        state.dom.redrawNow();\n    }\n    else {\n        const ease = easing(rest);\n        for (const cfg of cur.plan.anims.values()) {\n            cfg[2] = cfg[0] * ease;\n            cfg[3] = cfg[1] * ease;\n        }\n        state.dom.redrawNow(true); // optimisation: don't render SVG changes during animations\n        requestAnimationFrame((now = performance.now()) => step(state, now));\n    }\n}\nfunction animate(mutation, state) {\n    // clone state before mutating it\n    const prevPieces = new Map(state.pieces);\n    const result = mutation(state);\n    const plan = computePlan(prevPieces, state);\n    if (plan.anims.size || plan.fadings.size) {\n        const alreadyRunning = state.animation.current && state.animation.current.start;\n        state.animation.current = {\n            start: performance.now(),\n            frequency: 1 / state.animation.duration,\n            plan: plan,\n        };\n        if (!alreadyRunning)\n            step(state, performance.now());\n    }\n    else {\n        // don't animate, just render right away\n        state.dom.redraw();\n    }\n    return result;\n}\n// https://gist.github.com/gre/1650294\nconst easing = (t) => (t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1);\n//# sourceMappingURL=anim.js.map","import { unselect, cancelMove, getKeyAtDomPos, getSnappedKeyAtDomPos, whitePov } from './board.js';\nimport { eventPosition, isRightButton } from './util.js';\nconst brushes = ['green', 'red', 'blue', 'yellow'];\nexport function start(state, e) {\n    // support one finger touch only\n    if (e.touches && e.touches.length > 1)\n        return;\n    e.stopPropagation();\n    e.preventDefault();\n    e.ctrlKey ? unselect(state) : cancelMove(state);\n    const pos = eventPosition(e), orig = getKeyAtDomPos(pos, whitePov(state), state.dom.bounds());\n    if (!orig)\n        return;\n    state.drawable.current = {\n        orig,\n        pos,\n        brush: eventBrush(e),\n        snapToValidMove: state.drawable.defaultSnapToValidMove,\n    };\n    processDraw(state);\n}\nexport function processDraw(state) {\n    requestAnimationFrame(() => {\n        const cur = state.drawable.current;\n        if (cur) {\n            const keyAtDomPos = getKeyAtDomPos(cur.pos, whitePov(state), state.dom.bounds());\n            if (!keyAtDomPos) {\n                cur.snapToValidMove = false;\n            }\n            const mouseSq = cur.snapToValidMove\n                ? getSnappedKeyAtDomPos(cur.orig, cur.pos, whitePov(state), state.dom.bounds())\n                : keyAtDomPos;\n            if (mouseSq !== cur.mouseSq) {\n                cur.mouseSq = mouseSq;\n                cur.dest = mouseSq !== cur.orig ? mouseSq : undefined;\n                state.dom.redrawNow();\n            }\n            processDraw(state);\n        }\n    });\n}\nexport function move(state, e) {\n    if (state.drawable.current)\n        state.drawable.current.pos = eventPosition(e);\n}\nexport function end(state) {\n    const cur = state.drawable.current;\n    if (cur) {\n        if (cur.mouseSq)\n            addShape(state.drawable, cur);\n        cancel(state);\n    }\n}\nexport function cancel(state) {\n    if (state.drawable.current) {\n        state.drawable.current = undefined;\n        state.dom.redraw();\n    }\n}\nexport function clear(state) {\n    if (state.drawable.shapes.length) {\n        state.drawable.shapes = [];\n        state.dom.redraw();\n        onChange(state.drawable);\n    }\n}\nfunction eventBrush(e) {\n    const modA = (e.shiftKey || e.ctrlKey) && isRightButton(e);\n    const modB = e.altKey || e.metaKey || e.getModifierState?.('AltGraph');\n    return brushes[(modA ? 1 : 0) + (modB ? 2 : 0)];\n}\nfunction addShape(drawable, cur) {\n    const sameShape = (s) => s.orig === cur.orig && s.dest === cur.dest;\n    const similar = drawable.shapes.find(sameShape);\n    if (similar)\n        drawable.shapes = drawable.shapes.filter(s => !sameShape(s));\n    if (!similar || similar.brush !== cur.brush)\n        drawable.shapes.push({\n            orig: cur.orig,\n            dest: cur.dest,\n            brush: cur.brush,\n        });\n    onChange(drawable);\n}\nfunction onChange(drawable) {\n    if (drawable.onChange)\n        drawable.onChange(drawable.shapes);\n}\n//# sourceMappingURL=draw.js.map","import * as board from './board.js';\nimport * as util from './util.js';\nimport { clear as drawClear } from './draw.js';\nimport { anim } from './anim.js';\nexport function start(s, e) {\n    if (!(s.trustAllEvents || e.isTrusted))\n        return; // only trust when trustAllEvents is enabled\n    if (e.buttons !== undefined && e.buttons > 1)\n        return; // only touch or left click\n    if (e.touches && e.touches.length > 1)\n        return; // support one finger touch only\n    const bounds = s.dom.bounds(), position = util.eventPosition(e), orig = board.getKeyAtDomPos(position, board.whitePov(s), bounds);\n    if (!orig)\n        return;\n    const piece = s.pieces.get(orig);\n    const previouslySelected = s.selected;\n    if (!previouslySelected &&\n        s.drawable.enabled &&\n        (s.drawable.eraseOnClick || !piece || piece.color !== s.turnColor))\n        drawClear(s);\n    // Prevent touch scroll and create no corresponding mouse event, if there\n    // is an intent to interact with the board.\n    if (e.cancelable !== false &&\n        (!e.touches || s.blockTouchScroll || piece || previouslySelected || pieceCloseTo(s, position)))\n        e.preventDefault();\n    else if (e.touches)\n        return; // Handle only corresponding mouse event https://github.com/lichess-org/chessground/pull/268\n    const hadPremove = !!s.premovable.current;\n    const hadPredrop = !!s.predroppable.current;\n    s.stats.ctrlKey = e.ctrlKey;\n    if (s.selected && board.canMove(s, s.selected, orig)) {\n        anim(state => board.selectSquare(state, orig), s);\n    }\n    else {\n        board.selectSquare(s, orig);\n    }\n    const stillSelected = s.selected === orig;\n    const element = pieceElementByKey(s, orig);\n    if (piece && element && stillSelected && board.isDraggable(s, orig)) {\n        s.draggable.current = {\n            orig,\n            piece,\n            origPos: position,\n            pos: position,\n            started: s.draggable.autoDistance && s.stats.dragged,\n            element,\n            previouslySelected,\n            originTarget: e.target,\n            keyHasChanged: false,\n        };\n        element.cgDragging = true;\n        element.classList.add('dragging');\n        // place ghost\n        const ghost = s.dom.elements.ghost;\n        if (ghost) {\n            ghost.className = `ghost ${piece.color} ${piece.role}`;\n            util.translate(ghost, util.posToTranslate(bounds)(util.key2pos(orig), board.whitePov(s)));\n            util.setVisible(ghost, true);\n        }\n        processDrag(s);\n    }\n    else {\n        if (hadPremove)\n            board.unsetPremove(s);\n        if (hadPredrop)\n            board.unsetPredrop(s);\n    }\n    s.dom.redraw();\n}\nfunction pieceCloseTo(s, pos) {\n    const asWhite = board.whitePov(s), bounds = s.dom.bounds(), radiusSq = Math.pow((s.touchIgnoreRadius * bounds.width) / 16, 2) * 2;\n    for (const key of s.pieces.keys()) {\n        const center = util.computeSquareCenter(key, asWhite, bounds);\n        if (util.distanceSq(center, pos) <= radiusSq)\n            return true;\n    }\n    return false;\n}\nexport function dragNewPiece(s, piece, e, force) {\n    const key = 'a0';\n    s.pieces.set(key, piece);\n    s.dom.redraw();\n    const position = util.eventPosition(e);\n    s.draggable.current = {\n        orig: key,\n        piece,\n        origPos: position,\n        pos: position,\n        started: true,\n        element: () => pieceElementByKey(s, key),\n        originTarget: e.target,\n        newPiece: true,\n        force: !!force,\n        keyHasChanged: false,\n    };\n    processDrag(s);\n}\nfunction processDrag(s) {\n    requestAnimationFrame(() => {\n        const cur = s.draggable.current;\n        if (!cur)\n            return;\n        // cancel animations while dragging\n        if (s.animation.current?.plan.anims.has(cur.orig))\n            s.animation.current = undefined;\n        // if moving piece is gone, cancel\n        const origPiece = s.pieces.get(cur.orig);\n        if (!origPiece || !util.samePiece(origPiece, cur.piece))\n            cancel(s);\n        else {\n            if (!cur.started && util.distanceSq(cur.pos, cur.origPos) >= Math.pow(s.draggable.distance, 2))\n                cur.started = true;\n            if (cur.started) {\n                // support lazy elements\n                if (typeof cur.element === 'function') {\n                    const found = cur.element();\n                    if (!found)\n                        return;\n                    found.cgDragging = true;\n                    found.classList.add('dragging');\n                    cur.element = found;\n                }\n                const bounds = s.dom.bounds();\n                util.translate(cur.element, [\n                    cur.pos[0] - bounds.left - bounds.width / 16,\n                    cur.pos[1] - bounds.top - bounds.height / 16,\n                ]);\n                cur.keyHasChanged || (cur.keyHasChanged = cur.orig !== board.getKeyAtDomPos(cur.pos, board.whitePov(s), bounds));\n            }\n        }\n        processDrag(s);\n    });\n}\nexport function move(s, e) {\n    // support one finger touch only\n    if (s.draggable.current && (!e.touches || e.touches.length < 2)) {\n        s.draggable.current.pos = util.eventPosition(e);\n    }\n}\nexport function end(s, e) {\n    const cur = s.draggable.current;\n    if (!cur)\n        return;\n    // create no corresponding mouse event\n    if (e.type === 'touchend' && e.cancelable !== false)\n        e.preventDefault();\n    // comparing with the origin target is an easy way to test that the end event\n    // has the same touch origin\n    if (e.type === 'touchend' && cur.originTarget !== e.target && !cur.newPiece) {\n        s.draggable.current = undefined;\n        return;\n    }\n    board.unsetPremove(s);\n    board.unsetPredrop(s);\n    // touchend has no position; so use the last touchmove position instead\n    const eventPos = util.eventPosition(e) || cur.pos;\n    const dest = board.getKeyAtDomPos(eventPos, board.whitePov(s), s.dom.bounds());\n    if (dest && cur.started && cur.orig !== dest) {\n        if (cur.newPiece)\n            board.dropNewPiece(s, cur.orig, dest, cur.force);\n        else {\n            s.stats.ctrlKey = e.ctrlKey;\n            if (board.userMove(s, cur.orig, dest))\n                s.stats.dragged = true;\n        }\n    }\n    else if (cur.newPiece) {\n        s.pieces.delete(cur.orig);\n    }\n    else if (s.draggable.deleteOnDropOff && !dest) {\n        s.pieces.delete(cur.orig);\n        board.callUserFunction(s.events.change);\n    }\n    if ((cur.orig === cur.previouslySelected || cur.keyHasChanged) && (cur.orig === dest || !dest))\n        board.unselect(s);\n    else if (!s.selectable.enabled)\n        board.unselect(s);\n    removeDragElements(s);\n    s.draggable.current = undefined;\n    s.dom.redraw();\n}\nexport function cancel(s) {\n    const cur = s.draggable.current;\n    if (cur) {\n        if (cur.newPiece)\n            s.pieces.delete(cur.orig);\n        s.draggable.current = undefined;\n        board.unselect(s);\n        removeDragElements(s);\n        s.dom.redraw();\n    }\n}\nfunction removeDragElements(s) {\n    const e = s.dom.elements;\n    if (e.ghost)\n        util.setVisible(e.ghost, false);\n}\nfunction pieceElementByKey(s, key) {\n    let el = s.dom.elements.board.firstChild;\n    while (el) {\n        if (el.cgKey === key && el.tagName === 'PIECE')\n            return el;\n        el = el.nextSibling;\n    }\n    return;\n}\n//# sourceMappingURL=drag.js.map","export function explosion(state, keys) {\n    state.exploding = { stage: 1, keys };\n    state.dom.redraw();\n    setTimeout(() => {\n        setStage(state, 2);\n        setTimeout(() => setStage(state, undefined), 120);\n    }, 120);\n}\nfunction setStage(state, stage) {\n    if (state.exploding) {\n        if (stage)\n            state.exploding.stage = stage;\n        else\n            state.exploding = undefined;\n        state.dom.redraw();\n    }\n}\n//# sourceMappingURL=explosion.js.map","import * as board from './board.js';\nimport { write as fenWrite } from './fen.js';\nimport { configure, applyAnimation } from './config.js';\nimport { anim, render } from './anim.js';\nimport { cancel as dragCancel, dragNewPiece } from './drag.js';\nimport { explosion } from './explosion.js';\n// see API types and documentations in dts/api.d.ts\nexport function start(state, redrawAll) {\n    function toggleOrientation() {\n        board.toggleOrientation(state);\n        redrawAll();\n    }\n    return {\n        set(config) {\n            if (config.orientation && config.orientation !== state.orientation)\n                toggleOrientation();\n            applyAnimation(state, config);\n            (config.fen ? anim : render)(state => configure(state, config), state);\n        },\n        state,\n        getFen: () => fenWrite(state.pieces),\n        toggleOrientation,\n        setPieces(pieces) {\n            anim(state => board.setPieces(state, pieces), state);\n        },\n        selectSquare(key, force) {\n            if (key)\n                anim(state => board.selectSquare(state, key, force), state);\n            else if (state.selected) {\n                board.unselect(state);\n                state.dom.redraw();\n            }\n        },\n        move(orig, dest) {\n            anim(state => board.baseMove(state, orig, dest), state);\n        },\n        newPiece(piece, key) {\n            anim(state => board.baseNewPiece(state, piece, key), state);\n        },\n        playPremove() {\n            if (state.premovable.current) {\n                if (anim(board.playPremove, state))\n                    return true;\n                // if the premove couldn't be played, redraw to clear it up\n                state.dom.redraw();\n            }\n            return false;\n        },\n        playPredrop(validate) {\n            if (state.predroppable.current) {\n                const result = board.playPredrop(state, validate);\n                state.dom.redraw();\n                return result;\n            }\n            return false;\n        },\n        cancelPremove() {\n            render(board.unsetPremove, state);\n        },\n        cancelPredrop() {\n            render(board.unsetPredrop, state);\n        },\n        cancelMove() {\n            render(state => {\n                board.cancelMove(state);\n                dragCancel(state);\n            }, state);\n        },\n        stop() {\n            render(state => {\n                board.stop(state);\n                dragCancel(state);\n            }, state);\n        },\n        explode(keys) {\n            explosion(state, keys);\n        },\n        setAutoShapes(shapes) {\n            render(state => (state.drawable.autoShapes = shapes), state);\n        },\n        setShapes(shapes) {\n            render(state => (state.drawable.shapes = shapes.slice()), state);\n        },\n        getKeyAtDomPos(pos) {\n            return board.getKeyAtDomPos(pos, board.whitePov(state), state.dom.bounds());\n        },\n        redrawAll,\n        dragNewPiece(piece, event, force) {\n            dragNewPiece(state, piece, event, force);\n        },\n        destroy() {\n            board.stop(state);\n            state.dom.unbind && state.dom.unbind();\n            state.dom.destroyed = true;\n        },\n    };\n}\n//# sourceMappingURL=api.js.map","import { key2pos } from './util.js';\nexport { createElement, setAttributes };\nexport function createDefs() {\n    const defs = createElement('defs');\n    const filter = setAttributes(createElement('filter'), { id: 'cg-filter-blur' });\n    filter.appendChild(setAttributes(createElement('feGaussianBlur'), { stdDeviation: '0.013' }));\n    defs.appendChild(filter);\n    return defs;\n}\nexport function renderSvg(state, els) {\n    const d = state.drawable, curD = d.current, cur = curD && curD.mouseSq ? curD : undefined, dests = new Map(), bounds = state.dom.bounds(), nonPieceAutoShapes = d.autoShapes.filter(autoShape => !autoShape.piece);\n    for (const s of d.shapes.concat(nonPieceAutoShapes).concat(cur ? [cur] : [])) {\n        if (!s.dest)\n            continue;\n        const sources = dests.get(s.dest) ?? new Set(), from = pos2user(orient(key2pos(s.orig), state.orientation), bounds), to = pos2user(orient(key2pos(s.dest), state.orientation), bounds);\n        sources.add(moveAngle(from, to));\n        dests.set(s.dest, sources);\n    }\n    const shapes = [];\n    for (const s of d.shapes.concat(nonPieceAutoShapes)) {\n        shapes.push({\n            shape: s,\n            current: false,\n            hash: shapeHash(s, isShort(s.dest, dests), false, bounds),\n        });\n    }\n    if (cur)\n        shapes.push({\n            shape: cur,\n            current: true,\n            hash: shapeHash(cur, isShort(cur.dest, dests), true, bounds),\n        });\n    const fullHash = shapes.map(sc => sc.hash).join(';');\n    if (fullHash === state.drawable.prevSvgHash)\n        return;\n    state.drawable.prevSvgHash = fullHash;\n    syncDefs(d, shapes, els);\n    syncShapes(shapes, els, s => renderShape(state, s, d.brushes, dests, bounds));\n}\n// append only. Don't try to update/remove.\nfunction syncDefs(d, shapes, els) {\n    for (const shapesEl of [els.shapes, els.shapesBelow]) {\n        const defsEl = shapesEl.querySelector('defs');\n        const thisPlane = shapes.filter(s => (shapesEl === els.shapesBelow) === !!s.shape.below);\n        const brushes = new Map();\n        for (const s of thisPlane.filter(s => s.shape.dest && s.shape.brush)) {\n            const brush = makeCustomBrush(d.brushes[s.shape.brush], s.shape.modifiers);\n            const { key, color } = hiliteOf(s.shape);\n            if (key && color)\n                brushes.set(key, { key, color, opacity: 1, lineWidth: 1 });\n            brushes.set(brush.key, brush);\n        }\n        const keysInDom = new Set();\n        let el = defsEl.firstElementChild;\n        while (el) {\n            keysInDom.add(el.getAttribute('cgKey'));\n            el = el.nextElementSibling;\n        }\n        for (const [key, brush] of brushes.entries()) {\n            if (!keysInDom.has(key))\n                defsEl.appendChild(renderMarker(brush));\n        }\n    }\n}\nfunction syncShapes(shapes, els, renderShape) {\n    for (const [shapesEl, customEl] of [\n        [els.shapes, els.custom],\n        [els.shapesBelow, els.customBelow],\n    ]) {\n        const [shapesG, customG] = [shapesEl, customEl].map(el => el.querySelector('g'));\n        const thisPlane = shapes.filter(s => (shapesEl === els.shapesBelow) === !!s.shape.below);\n        const hashesInDom = new Map();\n        for (const sc of thisPlane)\n            hashesInDom.set(sc.hash, false);\n        for (const root of [shapesG, customG]) {\n            const toRemove = [];\n            let el = root.firstElementChild, elHash;\n            while (el) {\n                elHash = el.getAttribute('cgHash');\n                if (hashesInDom.has(elHash))\n                    hashesInDom.set(elHash, true);\n                else\n                    toRemove.push(el);\n                el = el.nextElementSibling;\n            }\n            for (const el of toRemove)\n                root.removeChild(el);\n        }\n        // insert shapes that are not yet in dom\n        for (const sc of thisPlane.filter(s => !hashesInDom.get(s.hash))) {\n            for (const svg of renderShape(sc)) {\n                if (svg.isCustom)\n                    customG.appendChild(svg.el);\n                else\n                    shapesG.appendChild(svg.el);\n            }\n        }\n    }\n}\nfunction shapeHash({ orig, dest, brush, piece, modifiers, customSvg, label, below }, shorten, current, bounds) {\n    // a shape and an overlay svg share a lifetime and have the same cgHash attribute\n    return [\n        bounds.width,\n        bounds.height,\n        current,\n        orig,\n        dest,\n        brush,\n        shorten && '-',\n        piece && pieceHash(piece),\n        modifiers && modifiersHash(modifiers),\n        customSvg && `custom-${textHash(customSvg.html)},${customSvg.center?.[0] ?? 'o'}`,\n        label && `label-${textHash(label.text)}`,\n        below && 'below',\n    ]\n        .filter(x => x)\n        .join(',');\n}\nfunction pieceHash(piece) {\n    return [piece.color, piece.role, piece.scale].filter(x => x).join(',');\n}\nfunction modifiersHash(m) {\n    return [m.lineWidth, m.hilite].filter(x => x).join(',');\n}\nfunction textHash(s) {\n    // Rolling hash with base 31 (cf. https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript)\n    let h = 0;\n    for (let i = 0; i < s.length; i++) {\n        h = ((h << 5) - h + s.charCodeAt(i)) >>> 0;\n    }\n    return h.toString();\n}\nfunction renderShape(state, { shape, current, hash }, brushes, dests, bounds) {\n    const from = pos2user(orient(key2pos(shape.orig), state.orientation), bounds), to = shape.dest ? pos2user(orient(key2pos(shape.dest), state.orientation), bounds) : from, brush = shape.brush && makeCustomBrush(brushes[shape.brush], shape.modifiers), slots = dests.get(shape.dest), svgs = [];\n    if (brush) {\n        const el = setAttributes(createElement('g'), { cgHash: hash });\n        svgs.push({ el });\n        if (from[0] !== to[0] || from[1] !== to[1])\n            el.appendChild(renderArrow(shape, brush, from, to, current, isShort(shape.dest, dests)));\n        else\n            el.appendChild(renderCircle(brushes[shape.brush], from, current, bounds));\n    }\n    if (shape.label) {\n        const label = shape.label;\n        label.fill ?? (label.fill = shape.brush && brushes[shape.brush].color);\n        const corner = shape.brush ? undefined : 'tr';\n        svgs.push({ el: renderLabel(label, hash, from, to, slots, corner), isCustom: true });\n    }\n    if (shape.customSvg) {\n        const on = shape.customSvg.center ?? 'orig';\n        const [x, y] = on === 'label' ? labelCoords(from, to, slots).map(c => c - 0.5) : on === 'dest' ? to : from;\n        const el = setAttributes(createElement('g'), { transform: `translate(${x},${y})`, cgHash: hash });\n        el.innerHTML = `<svg width=\"1\" height=\"1\" viewBox=\"0 0 100 100\">${shape.customSvg.html}</svg>`;\n        svgs.push({ el, isCustom: true });\n    }\n    return svgs;\n}\nfunction renderCircle(brush, at, current, bounds) {\n    const widths = circleWidth(), radius = (bounds.width + bounds.height) / (4 * Math.max(bounds.width, bounds.height));\n    return setAttributes(createElement('circle'), {\n        stroke: brush.color,\n        'stroke-width': widths[current ? 0 : 1],\n        fill: 'none',\n        opacity: opacity(brush, current),\n        cx: at[0],\n        cy: at[1],\n        r: radius - widths[1] / 2,\n    });\n}\nfunction renderArrow(s, brush, from, to, current, shorten) {\n    function renderLine(isHilite) {\n        const m = arrowMargin(shorten && !current), dx = to[0] - from[0], dy = to[1] - from[1], angle = Math.atan2(dy, dx), xo = Math.cos(angle) * m, yo = Math.sin(angle) * m;\n        const hilite = hiliteOf(s);\n        return setAttributes(createElement('line'), {\n            stroke: isHilite ? hilite.color : brush.color,\n            'stroke-width': lineWidth(brush, current) * (isHilite ? 1.14 : 1),\n            'stroke-linecap': 'round',\n            'marker-end': `url(#arrowhead-${isHilite ? hilite.key : brush.key})`,\n            opacity: s.modifiers?.hilite ? 1 : opacity(brush, current),\n            x1: from[0],\n            y1: from[1],\n            x2: to[0] - xo,\n            y2: to[1] - yo,\n        });\n    }\n    if (!s.modifiers?.hilite)\n        return renderLine(false);\n    const g = setAttributes(createElement('g'), { opacity: brush.opacity });\n    const blurred = setAttributes(createElement('g'), { filter: 'url(#cg-filter-blur)' });\n    blurred.appendChild(filterBox(from, to));\n    blurred.appendChild(renderLine(true));\n    g.appendChild(blurred);\n    g.appendChild(renderLine(false));\n    return g;\n}\nfunction renderMarker(brush) {\n    const marker = setAttributes(createElement('marker'), {\n        id: 'arrowhead-' + brush.key,\n        orient: 'auto',\n        overflow: 'visible',\n        markerWidth: 4,\n        markerHeight: 4,\n        refX: brush.key.startsWith('hilite') ? 1.86 : 2.05,\n        refY: 2,\n    });\n    marker.appendChild(setAttributes(createElement('path'), {\n        d: 'M0,0 V4 L3,2 Z',\n        fill: brush.color,\n    }));\n    marker.setAttribute('cgKey', brush.key);\n    return marker;\n}\nfunction renderLabel(label, hash, from, to, slots, corner) {\n    const labelSize = 0.4, fontSize = labelSize * 0.75 ** label.text.length, at = labelCoords(from, to, slots), cornerOff = corner === 'tr' ? 0.4 : 0, g = setAttributes(createElement('g'), {\n        transform: `translate(${at[0] + cornerOff},${at[1] - cornerOff})`,\n        cgHash: hash,\n    });\n    g.appendChild(setAttributes(createElement('circle'), {\n        r: labelSize / 2,\n        'fill-opacity': corner ? 1.0 : 0.8,\n        'stroke-opacity': corner ? 1.0 : 0.7,\n        'stroke-width': 0.03,\n        fill: label.fill ?? '#666',\n        stroke: 'white',\n    }));\n    const labelEl = setAttributes(createElement('text'), {\n        'font-size': fontSize,\n        'font-family': 'Noto Sans',\n        'text-anchor': 'middle',\n        fill: 'white',\n        y: 0.13 * 0.75 ** label.text.length,\n    });\n    labelEl.innerHTML = label.text;\n    g.appendChild(labelEl);\n    return g;\n}\nfunction orient(pos, color) {\n    return color === 'white' ? pos : [7 - pos[0], 7 - pos[1]];\n}\nfunction isShort(dest, dests) {\n    return true === (dest && dests.has(dest) && dests.get(dest).size > 1);\n}\nfunction createElement(tagName) {\n    return document.createElementNS('http://www.w3.org/2000/svg', tagName);\n}\nfunction setAttributes(el, attrs) {\n    for (const key in attrs) {\n        if (Object.prototype.hasOwnProperty.call(attrs, key))\n            el.setAttribute(key, attrs[key]);\n    }\n    return el;\n}\nfunction makeCustomBrush(base, modifiers) {\n    return !modifiers\n        ? base\n        : {\n            color: base.color,\n            opacity: Math.round(base.opacity * 10) / 10,\n            lineWidth: Math.round(modifiers.lineWidth || base.lineWidth),\n            key: [base.key, modifiers.lineWidth].filter(x => x).join(''),\n        };\n}\nfunction circleWidth() {\n    return [3 / 64, 4 / 64];\n}\nfunction lineWidth(brush, current) {\n    return ((brush.lineWidth || 10) * (current ? 0.85 : 1)) / 64;\n}\nfunction hiliteOf(shape) {\n    const hilite = shape.modifiers?.hilite;\n    return { key: hilite && `hilite-${hilite.replace('#', '')}`, color: hilite };\n}\nfunction opacity(brush, current) {\n    return (brush.opacity || 1) * (current ? 0.9 : 1);\n}\nfunction arrowMargin(shorten) {\n    return (shorten ? 20 : 10) / 64;\n}\nfunction pos2user(pos, bounds) {\n    const xScale = Math.min(1, bounds.width / bounds.height);\n    const yScale = Math.min(1, bounds.height / bounds.width);\n    return [(pos[0] - 3.5) * xScale, (3.5 - pos[1]) * yScale];\n}\nfunction filterBox(from, to) {\n    // lines/arrows are considered to be one dimensional for the purposes of SVG filters,\n    // so we add a transparent bounding box to ensure they apply to the 2nd dimension\n    const box = {\n        from: [Math.floor(Math.min(from[0], to[0])), Math.floor(Math.min(from[1], to[1]))],\n        to: [Math.ceil(Math.max(from[0], to[0])), Math.ceil(Math.max(from[1], to[1]))],\n    };\n    return setAttributes(createElement('rect'), {\n        x: box.from[0],\n        y: box.from[1],\n        width: box.to[0] - box.from[0],\n        height: box.to[1] - box.from[1],\n        fill: 'none',\n        stroke: 'none',\n    });\n}\nfunction moveAngle(from, to, asSlot = true) {\n    const angle = Math.atan2(to[1] - from[1], to[0] - from[0]) + Math.PI;\n    return asSlot ? (Math.round((angle * 8) / Math.PI) + 16) % 16 : angle;\n}\nfunction dist(from, to) {\n    return Math.sqrt([from[0] - to[0], from[1] - to[1]].reduce((acc, x) => acc + x * x, 0));\n}\n/*\n try to place label at the junction of the destination shaft and arrowhead. if there's more than\n 1 arrow pointing to a square, the arrow shortens by 10 / 64 units so the label must move as well.\n \n if the angle between two incoming arrows is pi / 8, such as when an adjacent knight and bishop\n attack the same square, the knight's label is slid further down the shaft by an amount equal to\n our label size to avoid collision\n*/\nfunction labelCoords(from, to, slots) {\n    let mag = dist(from, to);\n    //if (mag === 0) return [from[0], from[1]];\n    const angle = moveAngle(from, to, false);\n    if (slots) {\n        mag -= 33 / 64; // reduce by arrowhead length\n        if (slots.size > 1) {\n            mag -= 10 / 64; // reduce by shortening factor\n            const slot = moveAngle(from, to);\n            if (slots.has((slot + 1) % 16) || slots.has((slot + 15) % 16)) {\n                if (slot & 1)\n                    mag -= 0.4;\n                // and by label size for the knight if another arrow is within pi / 8.\n            }\n        }\n    }\n    return [from[0] - Math.cos(angle) * mag, from[1] - Math.sin(angle) * mag].map(c => c + 0.5);\n}\n//# sourceMappingURL=svg.js.map","import { setVisible, createEl } from './util.js';\nimport { colors, files, ranks } from './types.js';\nimport { createElement as createSVG, setAttributes, createDefs } from './svg.js';\nexport function renderWrap(element, s) {\n    // .cg-wrap (element passed to Chessground)\n    //   cg-container\n    //     cg-board\n    //     svg.cg-shapes\n    //       defs\n    //       g\n    //     svg.cg-custom-svgs\n    //       g\n    //     cg-auto-pieces\n    //     coords.ranks\n    //     coords.files\n    //     piece.ghost\n    element.innerHTML = '';\n    // ensure the cg-wrap class is set\n    // so bounds calculation can use the CSS width/height values\n    // add that class yourself to the element before calling chessground\n    // for a slight performance improvement! (avoids recomputing style)\n    element.classList.add('cg-wrap');\n    for (const c of colors)\n        element.classList.toggle('orientation-' + c, s.orientation === c);\n    element.classList.toggle('manipulable', !s.viewOnly);\n    const container = createEl('cg-container');\n    element.appendChild(container);\n    const board = createEl('cg-board');\n    container.appendChild(board);\n    let shapesBelow;\n    let shapes;\n    let customBelow;\n    let custom;\n    let autoPieces;\n    if (s.drawable.visible) {\n        [shapesBelow, shapes] = ['cg-shapes-below', 'cg-shapes'].map(cls => svgContainer(cls, true));\n        [customBelow, custom] = ['cg-custom-below', 'cg-custom-svgs'].map(cls => svgContainer(cls, false));\n        autoPieces = createEl('cg-auto-pieces');\n        container.appendChild(shapesBelow);\n        container.appendChild(customBelow);\n        container.appendChild(shapes);\n        container.appendChild(custom);\n        container.appendChild(autoPieces);\n    }\n    if (s.coordinates) {\n        const orientClass = s.orientation === 'black' ? ' black' : '';\n        const ranksPositionClass = s.ranksPosition === 'left' ? ' left' : '';\n        if (s.coordinatesOnSquares) {\n            const rankN = s.orientation === 'white' ? i => i + 1 : i => 8 - i;\n            files.forEach((f, i) => container.appendChild(renderCoords(ranks.map(r => f + r), 'squares rank' + rankN(i) + orientClass + ranksPositionClass)));\n        }\n        else {\n            container.appendChild(renderCoords(ranks, 'ranks' + orientClass + ranksPositionClass));\n            container.appendChild(renderCoords(files, 'files' + orientClass));\n        }\n    }\n    let ghost;\n    if (s.draggable.enabled && s.draggable.showGhost) {\n        ghost = createEl('piece', 'ghost');\n        setVisible(ghost, false);\n        container.appendChild(ghost);\n    }\n    return { board, container, wrap: element, ghost, shapes, shapesBelow, custom, customBelow, autoPieces };\n}\nfunction svgContainer(cls, isShapes) {\n    const svg = setAttributes(createSVG('svg'), {\n        class: cls,\n        viewBox: isShapes ? '-4 -4 8 8' : '-3.5 -3.5 8 8',\n        preserveAspectRatio: 'xMidYMid slice',\n    });\n    if (isShapes)\n        svg.appendChild(createDefs());\n    svg.appendChild(createSVG('g'));\n    return svg;\n}\nfunction renderCoords(elems, className) {\n    const el = createEl('coords', className);\n    let f;\n    for (const elem of elems) {\n        f = createEl('coord');\n        f.textContent = elem;\n        el.appendChild(f);\n    }\n    return el;\n}\n//# sourceMappingURL=wrap.js.map","import * as drag from './drag.js';\nimport * as draw from './draw.js';\nimport { drop } from './drop.js';\nimport { isRightButton } from './util.js';\nexport function bindBoard(s, onResize) {\n    const boardEl = s.dom.elements.board;\n    if ('ResizeObserver' in window)\n        new ResizeObserver(onResize).observe(s.dom.elements.wrap);\n    if (s.disableContextMenu || s.drawable.enabled) {\n        boardEl.addEventListener('contextmenu', e => e.preventDefault());\n    }\n    if (s.viewOnly)\n        return;\n    // Cannot be passive, because we prevent touch scrolling and dragging of\n    // selected elements.\n    const onStart = startDragOrDraw(s);\n    boardEl.addEventListener('touchstart', onStart, {\n        passive: false,\n    });\n    boardEl.addEventListener('mousedown', onStart, {\n        passive: false,\n    });\n}\n// returns the unbind function\nexport function bindDocument(s, onResize) {\n    const unbinds = [];\n    // Old versions of Edge and Safari do not support ResizeObserver. Send\n    // chessground.resize if a user action has changed the bounds of the board.\n    if (!('ResizeObserver' in window))\n        unbinds.push(unbindable(document.body, 'chessground.resize', onResize));\n    if (!s.viewOnly) {\n        const onmove = dragOrDraw(s, drag.move, draw.move);\n        const onend = dragOrDraw(s, drag.end, draw.end);\n        for (const ev of ['touchmove', 'mousemove'])\n            unbinds.push(unbindable(document, ev, onmove));\n        for (const ev of ['touchend', 'mouseup'])\n            unbinds.push(unbindable(document, ev, onend));\n        const onScroll = () => s.dom.bounds.clear();\n        unbinds.push(unbindable(document, 'scroll', onScroll, { capture: true, passive: true }));\n        unbinds.push(unbindable(window, 'resize', onScroll, { passive: true }));\n    }\n    return () => unbinds.forEach(f => f());\n}\nfunction unbindable(el, eventName, callback, options) {\n    el.addEventListener(eventName, callback, options);\n    return () => el.removeEventListener(eventName, callback, options);\n}\nconst startDragOrDraw = (s) => e => {\n    if (s.draggable.current)\n        drag.cancel(s);\n    else if (s.drawable.current)\n        draw.cancel(s);\n    else if (e.shiftKey || isRightButton(e)) {\n        if (s.drawable.enabled)\n            draw.start(s, e);\n    }\n    else if (!s.viewOnly) {\n        if (s.dropmode.active)\n            drop(s, e);\n        else\n            drag.start(s, e);\n    }\n};\nconst dragOrDraw = (s, withDrag, withDraw) => e => {\n    if (s.drawable.current) {\n        if (s.drawable.enabled)\n            withDraw(s, e);\n    }\n    else if (!s.viewOnly)\n        withDrag(s, e);\n};\n//# sourceMappingURL=events.js.map","import * as board from './board.js';\nimport * as util from './util.js';\nimport { cancel as dragCancel } from './drag.js';\nexport function setDropMode(s, piece) {\n    s.dropmode = {\n        active: true,\n        piece,\n    };\n    dragCancel(s);\n}\nexport function cancelDropMode(s) {\n    s.dropmode = {\n        active: false,\n    };\n}\nexport function drop(s, e) {\n    if (!s.dropmode.active)\n        return;\n    board.unsetPremove(s);\n    board.unsetPredrop(s);\n    const piece = s.dropmode.piece;\n    if (piece) {\n        s.pieces.set('a0', piece);\n        const position = util.eventPosition(e);\n        const dest = position && board.getKeyAtDomPos(position, board.whitePov(s), s.dom.bounds());\n        if (dest)\n            board.dropNewPiece(s, 'a0', dest);\n    }\n    s.dom.redraw();\n}\n//# sourceMappingURL=drop.js.map","import { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translate } from './util.js';\nimport { whitePov } from './board.js';\n// ported from https://github.com/lichess-org/lichobile/blob/master/src/chessground/render.ts\n// in case of bugs, blame @veloce\nexport function render(s) {\n    const asWhite = whitePov(s), posToTranslate = posToTranslateFromBounds(s.dom.bounds()), boardEl = s.dom.elements.board, pieces = s.pieces, curAnim = s.animation.current, anims = curAnim ? curAnim.plan.anims : new Map(), fadings = curAnim ? curAnim.plan.fadings : new Map(), curDrag = s.draggable.current, squares = computeSquareClasses(s), samePieces = new Set(), sameSquares = new Set(), movedPieces = new Map(), movedSquares = new Map(); // by class name\n    let k, el, pieceAtKey, elPieceName, anim, fading, pMvdset, pMvd, sMvdset, sMvd;\n    // walk over all board dom elements, apply animations and flag moved pieces\n    el = boardEl.firstChild;\n    while (el) {\n        k = el.cgKey;\n        if (isPieceNode(el)) {\n            pieceAtKey = pieces.get(k);\n            anim = anims.get(k);\n            fading = fadings.get(k);\n            elPieceName = el.cgPiece;\n            // if piece not being dragged anymore, remove dragging style\n            if (el.cgDragging && (!curDrag || curDrag.orig !== k)) {\n                el.classList.remove('dragging');\n                translate(el, posToTranslate(key2pos(k), asWhite));\n                el.cgDragging = false;\n            }\n            // remove fading class if it still remains\n            if (!fading && el.cgFading) {\n                el.cgFading = false;\n                el.classList.remove('fading');\n            }\n            // there is now a piece at this dom key\n            if (pieceAtKey) {\n                // continue animation if already animating and same piece\n                // (otherwise it could animate a captured piece)\n                if (anim && el.cgAnimating && elPieceName === pieceNameOf(pieceAtKey)) {\n                    const pos = key2pos(k);\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                    el.classList.add('anim');\n                    translate(el, posToTranslate(pos, asWhite));\n                }\n                else if (el.cgAnimating) {\n                    el.cgAnimating = false;\n                    el.classList.remove('anim');\n                    translate(el, posToTranslate(key2pos(k), asWhite));\n                    if (s.addPieceZIndex)\n                        el.style.zIndex = posZIndex(key2pos(k), asWhite);\n                }\n                // same piece: flag as same\n                if (elPieceName === pieceNameOf(pieceAtKey) && (!fading || !el.cgFading)) {\n                    samePieces.add(k);\n                }\n                // different piece: flag as moved unless it is a fading piece\n                else {\n                    if (fading && elPieceName === pieceNameOf(fading)) {\n                        el.classList.add('fading');\n                        el.cgFading = true;\n                    }\n                    else {\n                        appendValue(movedPieces, elPieceName, el);\n                    }\n                }\n            }\n            // no piece: flag as moved\n            else {\n                appendValue(movedPieces, elPieceName, el);\n            }\n        }\n        else if (isSquareNode(el)) {\n            const cn = el.className;\n            if (squares.get(k) === cn)\n                sameSquares.add(k);\n            else\n                appendValue(movedSquares, cn, el);\n        }\n        el = el.nextSibling;\n    }\n    // walk over all squares in current set, apply dom changes to moved squares\n    // or append new squares\n    for (const [sk, className] of squares) {\n        if (!sameSquares.has(sk)) {\n            sMvdset = movedSquares.get(className);\n            sMvd = sMvdset && sMvdset.pop();\n            const translation = posToTranslate(key2pos(sk), asWhite);\n            if (sMvd) {\n                sMvd.cgKey = sk;\n                translate(sMvd, translation);\n            }\n            else {\n                const squareNode = createEl('square', className);\n                squareNode.cgKey = sk;\n                translate(squareNode, translation);\n                boardEl.insertBefore(squareNode, boardEl.firstChild);\n            }\n        }\n    }\n    // walk over all pieces in current set, apply dom changes to moved pieces\n    // or append new pieces\n    for (const [k, p] of pieces) {\n        anim = anims.get(k);\n        if (!samePieces.has(k)) {\n            pMvdset = movedPieces.get(pieceNameOf(p));\n            pMvd = pMvdset && pMvdset.pop();\n            // a same piece was moved\n            if (pMvd) {\n                // apply dom changes\n                pMvd.cgKey = k;\n                if (pMvd.cgFading) {\n                    pMvd.classList.remove('fading');\n                    pMvd.cgFading = false;\n                }\n                const pos = key2pos(k);\n                if (s.addPieceZIndex)\n                    pMvd.style.zIndex = posZIndex(pos, asWhite);\n                if (anim) {\n                    pMvd.cgAnimating = true;\n                    pMvd.classList.add('anim');\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                }\n                translate(pMvd, posToTranslate(pos, asWhite));\n            }\n            // no piece in moved obj: insert the new piece\n            // assumes the new piece is not being dragged\n            else {\n                const pieceName = pieceNameOf(p), pieceNode = createEl('piece', pieceName), pos = key2pos(k);\n                pieceNode.cgPiece = pieceName;\n                pieceNode.cgKey = k;\n                if (anim) {\n                    pieceNode.cgAnimating = true;\n                    pos[0] += anim[2];\n                    pos[1] += anim[3];\n                }\n                translate(pieceNode, posToTranslate(pos, asWhite));\n                if (s.addPieceZIndex)\n                    pieceNode.style.zIndex = posZIndex(pos, asWhite);\n                boardEl.appendChild(pieceNode);\n            }\n        }\n    }\n    // remove any element that remains in the moved sets\n    for (const nodes of movedPieces.values())\n        removeNodes(s, nodes);\n    for (const nodes of movedSquares.values())\n        removeNodes(s, nodes);\n}\nexport function renderResized(s) {\n    const asWhite = whitePov(s), posToTranslate = posToTranslateFromBounds(s.dom.bounds());\n    let el = s.dom.elements.board.firstChild;\n    while (el) {\n        if ((isPieceNode(el) && !el.cgAnimating) || isSquareNode(el)) {\n            translate(el, posToTranslate(key2pos(el.cgKey), asWhite));\n        }\n        el = el.nextSibling;\n    }\n}\nexport function updateBounds(s) {\n    const bounds = s.dom.elements.wrap.getBoundingClientRect();\n    const container = s.dom.elements.container;\n    const ratio = bounds.height / bounds.width;\n    const width = (Math.floor((bounds.width * window.devicePixelRatio) / 8) * 8) / window.devicePixelRatio;\n    const height = width * ratio;\n    container.style.width = width + 'px';\n    container.style.height = height + 'px';\n    s.dom.bounds.clear();\n    s.addDimensionsCssVarsTo?.style.setProperty('---cg-width', width + 'px');\n    s.addDimensionsCssVarsTo?.style.setProperty('---cg-height', height + 'px');\n}\nconst isPieceNode = (el) => el.tagName === 'PIECE';\nconst isSquareNode = (el) => el.tagName === 'SQUARE';\nfunction removeNodes(s, nodes) {\n    for (const node of nodes)\n        s.dom.elements.board.removeChild(node);\n}\nfunction posZIndex(pos, asWhite) {\n    const minZ = 3;\n    const rank = pos[1];\n    const z = asWhite ? minZ + 7 - rank : minZ + rank;\n    return `${z}`;\n}\nconst pieceNameOf = (piece) => `${piece.color} ${piece.role}`;\nfunction computeSquareClasses(s) {\n    const squares = new Map();\n    if (s.lastMove && s.highlight.lastMove)\n        for (const k of s.lastMove) {\n            addSquare(squares, k, 'last-move');\n        }\n    if (s.check && s.highlight.check)\n        addSquare(squares, s.check, 'check');\n    if (s.selected) {\n        addSquare(squares, s.selected, 'selected');\n        if (s.movable.showDests) {\n            const dests = s.movable.dests?.get(s.selected);\n            if (dests)\n                for (const k of dests) {\n                    addSquare(squares, k, 'move-dest' + (s.pieces.has(k) ? ' oc' : ''));\n                }\n            const pDests = s.premovable.customDests?.get(s.selected) ?? s.premovable.dests;\n            if (pDests)\n                for (const k of pDests) {\n                    addSquare(squares, k, 'premove-dest' + (s.pieces.has(k) ? ' oc' : ''));\n                }\n        }\n    }\n    const premove = s.premovable.current;\n    if (premove)\n        for (const k of premove)\n            addSquare(squares, k, 'current-premove');\n    else if (s.predroppable.current)\n        addSquare(squares, s.predroppable.current.key, 'current-premove');\n    const o = s.exploding;\n    if (o)\n        for (const k of o.keys)\n            addSquare(squares, k, 'exploding' + o.stage);\n    if (s.highlight.custom) {\n        s.highlight.custom.forEach((v, k) => {\n            addSquare(squares, k, v);\n        });\n    }\n    return squares;\n}\nfunction addSquare(squares, key, klass) {\n    const classes = squares.get(key);\n    if (classes)\n        squares.set(key, `${classes} ${klass}`);\n    else\n        squares.set(key, klass);\n}\nfunction appendValue(map, key, value) {\n    const arr = map.get(key);\n    if (arr)\n        arr.push(value);\n    else\n        map.set(key, [value]);\n}\n//# sourceMappingURL=render.js.map","import { key2pos, createEl, posToTranslate as posToTranslateFromBounds, translateAndScale } from './util.js';\nimport { whitePov } from './board.js';\nimport { syncShapes } from './sync.js';\nexport function render(state, autoPieceEl) {\n    const autoPieces = state.drawable.autoShapes.filter(autoShape => autoShape.piece);\n    const autoPieceShapes = autoPieces.map((s) => {\n        return {\n            shape: s,\n            hash: hash(s),\n            current: false,\n        };\n    });\n    syncShapes(autoPieceShapes, autoPieceEl, shape => renderShape(state, shape, state.dom.bounds()));\n}\nexport function renderResized(state) {\n    const asWhite = whitePov(state), posToTranslate = posToTranslateFromBounds(state.dom.bounds());\n    let el = state.dom.elements.autoPieces?.firstChild;\n    while (el) {\n        translateAndScale(el, posToTranslate(key2pos(el.cgKey), asWhite), el.cgScale);\n        el = el.nextSibling;\n    }\n}\nfunction renderShape(state, { shape, hash }, bounds) {\n    const orig = shape.orig;\n    const role = shape.piece?.role;\n    const color = shape.piece?.color;\n    const scale = shape.piece?.scale;\n    const pieceEl = createEl('piece', `${role} ${color}`);\n    pieceEl.setAttribute('cgHash', hash);\n    pieceEl.cgKey = orig;\n    pieceEl.cgScale = scale;\n    translateAndScale(pieceEl, posToTranslateFromBounds(bounds)(key2pos(orig), whitePov(state)), scale);\n    return pieceEl;\n}\nconst hash = (autoPiece) => [autoPiece.orig, autoPiece.piece?.role, autoPiece.piece?.color, autoPiece.piece?.scale].join(',');\n//# sourceMappingURL=autoPieces.js.map","// append and remove only. No updates.\nexport function syncShapes(shapes, root, renderShape) {\n    const hashesInDom = new Map(), // by hash\n    toRemove = [];\n    for (const sc of shapes)\n        hashesInDom.set(sc.hash, false);\n    let el = root.firstElementChild, elHash;\n    while (el) {\n        elHash = el.getAttribute('cgHash');\n        // found a shape element that's here to stay\n        if (hashesInDom.has(elHash))\n            hashesInDom.set(elHash, true);\n        // or remove it\n        else\n            toRemove.push(el);\n        el = el.nextElementSibling;\n    }\n    // remove old shapes\n    for (const el of toRemove)\n        root.removeChild(el);\n    // insert shapes that are not yet in dom\n    for (const sc of shapes) {\n        if (!hashesInDom.get(sc.hash))\n            root.appendChild(renderShape(sc));\n    }\n}\n//# sourceMappingURL=sync.js.map","import { start } from './api.js';\nimport { configure } from './config.js';\nimport { defaults } from './state.js';\nimport { renderWrap } from './wrap.js';\nimport * as events from './events.js';\nimport { render, renderResized, updateBounds } from './render.js';\nimport * as autoPieces from './autoPieces.js';\nimport * as svg from './svg.js';\nimport * as util from './util.js';\nexport function initModule({ el, config }) {\n    return Chessground(el, config);\n}\nexport function Chessground(element, config) {\n    const maybeState = defaults();\n    configure(maybeState, config || {});\n    function redrawAll() {\n        const prevUnbind = 'dom' in maybeState ? maybeState.dom.unbind : undefined;\n        // compute bounds from existing board element if possible\n        // this allows non-square boards from CSS to be handled (for 3D)\n        const elements = renderWrap(element, maybeState), bounds = util.memo(() => elements.board.getBoundingClientRect()), redrawNow = (skipSvg) => {\n            render(state);\n            if (elements.autoPieces)\n                autoPieces.render(state, elements.autoPieces);\n            if (!skipSvg && elements.shapes)\n                svg.renderSvg(state, elements);\n        }, onResize = () => {\n            updateBounds(state);\n            renderResized(state);\n            if (elements.autoPieces)\n                autoPieces.renderResized(state);\n        };\n        const state = maybeState;\n        state.dom = {\n            elements,\n            bounds,\n            redraw: debounceRedraw(redrawNow),\n            redrawNow,\n            unbind: prevUnbind,\n        };\n        state.drawable.prevSvgHash = '';\n        updateBounds(state);\n        redrawNow(false);\n        events.bindBoard(state, onResize);\n        if (!prevUnbind)\n            state.dom.unbind = events.bindDocument(state, onResize);\n        state.events.insert && state.events.insert(elements);\n        return state;\n    }\n    return start(redrawAll(), redrawAll);\n}\nfunction debounceRedraw(redrawNow) {\n    let redrawing = false;\n    return () => {\n        if (redrawing)\n            return;\n        redrawing = true;\n        requestAnimationFrame(() => {\n            redrawNow();\n            redrawing = false;\n        });\n    };\n}\n//# sourceMappingURL=chessground.js.map","import * as fen from './fen.js';\nimport { timer } from './util.js';\nexport function defaults() {\n    return {\n        pieces: fen.read(fen.initial),\n        orientation: 'white',\n        turnColor: 'white',\n        coordinates: true,\n        coordinatesOnSquares: false,\n        ranksPosition: 'right',\n        autoCastle: true,\n        viewOnly: false,\n        disableContextMenu: false,\n        addPieceZIndex: false,\n        blockTouchScroll: false,\n        touchIgnoreRadius: 1,\n        pieceKey: false,\n        trustAllEvents: false,\n        highlight: {\n            lastMove: true,\n            check: true,\n        },\n        animation: {\n            enabled: true,\n            duration: 200,\n        },\n        movable: {\n            free: true,\n            color: 'both',\n            showDests: true,\n            events: {},\n            rookCastle: true,\n        },\n        premovable: {\n            enabled: true,\n            showDests: true,\n            castle: true,\n            events: {},\n        },\n        predroppable: {\n            enabled: false,\n            events: {},\n        },\n        draggable: {\n            enabled: true,\n            distance: 3,\n            autoDistance: true,\n            showGhost: true,\n            deleteOnDropOff: false,\n        },\n        dropmode: {\n            active: false,\n        },\n        selectable: {\n            enabled: true,\n        },\n        stats: {\n            // on touchscreen, default to \"tap-tap\" moves\n            // instead of drag\n            dragged: !('ontouchstart' in window),\n        },\n        events: {},\n        drawable: {\n            enabled: true, // can draw\n            visible: true, // can view\n            defaultSnapToValidMove: true,\n            eraseOnClick: true,\n            shapes: [],\n            autoShapes: [],\n            brushes: {\n                green: { key: 'g', color: '#15781B', opacity: 1, lineWidth: 10 },\n                red: { key: 'r', color: '#882020', opacity: 1, lineWidth: 10 },\n                blue: { key: 'b', color: '#003088', opacity: 1, lineWidth: 10 },\n                yellow: { key: 'y', color: '#e68f00', opacity: 1, lineWidth: 10 },\n                paleBlue: { key: 'pb', color: '#003088', opacity: 0.4, lineWidth: 15 },\n                paleGreen: { key: 'pg', color: '#15781B', opacity: 0.4, lineWidth: 15 },\n                paleRed: { key: 'pr', color: '#882020', opacity: 0.4, lineWidth: 15 },\n                paleGrey: {\n                    key: 'pgr',\n                    color: '#4a4a4a',\n                    opacity: 0.35,\n                    lineWidth: 15,\n                },\n                purple: { key: 'purple', color: '#68217a', opacity: 0.65, lineWidth: 10 },\n                pink: { key: 'pink', color: '#ee2080', opacity: 0.5, lineWidth: 10 },\n                white: { key: 'white', color: 'white', opacity: 1, lineWidth: 10 },\n                paleWhite: { key: 'pwhite', color: 'white', opacity: 0.6, lineWidth: 10 },\n            },\n            prevSvgHash: '',\n        },\n        hold: timer(),\n    };\n}\n//# sourceMappingURL=state.js.map"],"names":["colors","files","ranks","invRanks","cg.ranks","reverse","allKeys","cg.files","flatMap","f","map","r","pos2key","pos","key2pos","k","charCodeAt","allPos","timer","startAt","start","performance","now","cancel","undefined","stop","time","opposite","c","distanceSq","pos1","pos2","samePiece","p1","p2","role","color","posToTranslate","bounds","asWhite","width","height","translate","el","style","transform","translateAndScale","scale","setVisible","v","visibility","eventPosition","e","clientX","clientY","targetTouches","isRightButton","button","createEl","tagName","className","document","createElement","computeSquareCenter","key","left","top","diff","a","b","Math","abs","knightDir","x1","y1","x2","y2","rookDir","bishopDir","queenDir","kingDirNonCastling","max","pawnDirCapture","isDirectionUp","pawnDirAdvance","step","squaresBetween","dx","dy","stepX","sign","stepY","squares","x","y","push","sq","adjacentSquares","square","squareShiftedVertically","delta","isDestOccupiedByFriendly","ctx","friendlies","has","util.pos2key","anyPieceBetween","pieces","util.squaresBetween","some","s","canEnemyPawnAdvanceToSquare","pawnStart","dest","piece","enemies","get","startPos","util.key2pos","destPos","util.pawnDirAdvance","allPieces","isDestControlledByEnemy","pieceRolesExclude","piecePos","includes","util.pawnDirCapture","util.knightDir","util.bishopDir","util.rookDir","util.queenDir","util.kingDirNonCastling","isFriendlyOnDestAndAttacked","canBeCapturedBySomeEnemyEnPassant","lastMove","potentialSquareOfFriendlyPawn","friendly","util.diff","isPathClearEnoughOfEnemiesForPremove","unrestrictedPremoves","squaresOfEnemiesBetween","filter","length","enemySquare","enemy","enemyStep","squareAbove","util.squareShiftedVertically","enemyPawnDests","util.adjacentSquares","enemyPawn","canEnemyPawnCaptureOnSquare","badSquares","isPathClearEnoughForPremove","squaresOfFriendliesBetween","isPathClearEnoughOfFriendliesForPremove","bishop","rook","mobilityByRole","pawn","isDestOccupiedByEnemy","keys","canSomeEnemyPawnAdvanceToDest","knight","queen","king","canCastle","rookFilesFriendlies","util\n                .squaresBetween","every","p","util.samePiece","premove","state","premovable","castle","turnColor","Map","_","util.opposite","mobility","Array","from","util.allPos","callUserFunction","args","setTimeout","unsetPremove","current","events","unset","unsetPredrop","pd","predroppable","baseMove","orig","origPiece","destPiece","captured","selected","unselect","move","autoCastle","origPos","delete","set","tryAutoCastle","check","change","baseNewPiece","force","dropNewPiece","movable","dests","baseUserMove","result","animation","userMove","canMove","holdTime","hold","metadata","ctrlKey","stats","after","canPremove","meta","setPremove","canDrop","afterNewPiece","predrop","enabled","canPredrop","setPredrop","selectSquare","select","draggable","selectable","dragged","isMovable","isPremovable","setSelected","customDests","free","playPremove","success","cancelMove","getKeyAtDomPos","file","floor","rank","whitePov","orientation","initial","roles","n","q","letters","read","fen","row","col","promoted","nb","toLowerCase","applyAnimation","config","deepMerge","duration","configure","drawable","autoShapes","fenRead","shapes","setCheck","rookCastle","kingStartPos","d","base","extend","Object","prototype","hasOwnProperty","call","isPlainObject","o","proto","getPrototypeOf","anim","mutation","prevPieces","plan","anims","animedOrigs","fadings","missings","news","prePieces","curP","preP","vector","makePiece","util.allKeys","newP","closer","concat","computePlan","size","alreadyRunning","frequency","dom","redraw","animate","render","sort","util.distanceSq","cur","destroyed","redrawNow","rest","ease","easing","cfg","values","requestAnimationFrame","t","brushes","touches","stopPropagation","preventDefault","brush","eventBrush","snapToValidMove","defaultSnapToValidMove","processDraw","keyAtDomPos","mouseSq","validSnapPos","samePos","validSnapDistances","closestSnapIndex","reduce","index","getSnappedKeyAtDomPos","end","sameShape","similar","find","onChange","addShape","modA","shiftKey","modB","altKey","metaKey","getModifierState","trustAllEvents","isTrusted","buttons","position","util.eventPosition","board.getKeyAtDomPos","board.whitePov","previouslySelected","eraseOnClick","cancelable","blockTouchScroll","radiusSq","pow","touchIgnoreRadius","center","util.computeSquareCenter","pieceCloseTo","hadPremove","hadPredrop","board.canMove","board.selectSquare","stillSelected","element","pieceElementByKey","board.isDraggable","started","autoDistance","originTarget","target","keyHasChanged","cgDragging","classList","add","ghost","elements","util.translate","util.posToTranslate","util.setVisible","processDrag","board.unsetPremove","board.unsetPredrop","distance","found","type","newPiece","board.dropNewPiece","board.userMove","deleteOnDropOff","board.callUserFunction","board.unselect","removeDragElements","board","firstChild","cgKey","nextSibling","setStage","stage","exploding","redrawAll","toggleOrientation","board.toggleOrientation","getFen","fenWrite","toUpperCase","join","replace","toString","setPieces","board.setPieces","board.baseMove","board.baseNewPiece","board.playPremove","playPredrop","validate","drop","board.playPredrop","cancelPremove","cancelPredrop","board.cancelMove","dragCancel","board.stop","explode","explosion","setAutoShapes","setShapes","slice","dragNewPiece","event","destroy","unbind","renderSvg","els","curD","nonPieceAutoShapes","autoShape","sources","Set","pos2user","orient","to","moveAngle","shape","hash","shapeHash","isShort","fullHash","sc","prevSvgHash","shapesEl","shapesBelow","defsEl","querySelector","thisPlane","below","makeCustomBrush","modifiers","hiliteOf","opacity","lineWidth","keysInDom","firstElementChild","getAttribute","nextElementSibling","entries","appendChild","renderMarker","syncDefs","renderShape","customEl","custom","customBelow","shapesG","customG","hashesInDom","root","toRemove","elHash","removeChild","svg","isCustom","syncShapes","slots","svgs","setAttributes","cgHash","shorten","renderLine","isHilite","m","arrowMargin","angle","atan2","xo","cos","yo","sin","hilite","stroke","g","blurred","box","min","ceil","fill","filterBox","renderArrow","at","widths","radius","cx","cy","renderCircle","label","corner","renderLabel","customSvg","on","labelCoords","innerHTML","html","pieceHash","textHash","text","h","i","marker","id","overflow","markerWidth","markerHeight","refX","startsWith","refY","setAttribute","fontSize","cornerOff","labelSize","labelEl","createElementNS","attrs","round","xScale","yScale","asSlot","PI","mag","sqrt","acc","dist","slot","svgContainer","cls","isShapes","createSVG","class","viewBox","preserveAspectRatio","defs","stdDeviation","createDefs","renderCoords","elems","elem","textContent","unbindable","eventName","callback","options","addEventListener","removeEventListener","startDragOrDraw","drag.cancel","draw.cancel","draw.start","viewOnly","dropmode","active","drag.start","dragOrDraw","withDrag","withDraw","posToTranslateFromBounds","boardEl","curAnim","curDrag","highlight","addSquare","showDests","pDests","forEach","computeSquareClasses","samePieces","sameSquares","movedPieces","movedSquares","pieceAtKey","elPieceName","fading","pMvdset","pMvd","sMvdset","sMvd","isPieceNode","cgPiece","remove","cgFading","cgAnimating","pieceNameOf","addPieceZIndex","zIndex","posZIndex","appendValue","isSquareNode","cn","sk","pop","translation","squareNode","insertBefore","pieceName","pieceNode","nodes","removeNodes","updateBounds","wrap","getBoundingClientRect","container","ratio","window","devicePixelRatio","clear","addDimensionsCssVarsTo","setProperty","node","minZ","klass","classes","value","arr","autoPieceEl","pieceEl","cgScale","autoPiece","debounceRedraw","redrawing","maybeState","fen.read","fen.initial","coordinates","coordinatesOnSquares","ranksPosition","disableContextMenu","pieceKey","showGhost","visible","green","red","blue","yellow","paleBlue","paleGreen","paleRed","paleGrey","purple","pink","white","paleWhite","prevUnbind","toggle","autoPieces","orientClass","ranksPositionClass","rankN","renderWrap","ret","util.memo","skipSvg","autoPieces.render","svg.renderSvg","onResize","renderResized","autoPieces.renderResized","ResizeObserver","observe","onStart","passive","events.bindBoard","unbinds","body","onmove","drag.move","draw.move","onend","drag.end","draw.end","ev","onScroll","capture","events.bindDocument","insert"],"mappings":"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"}